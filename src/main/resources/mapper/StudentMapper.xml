<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wdd.studentmanager.mapper.StudenetMapper">

    <resultMap type="com.wdd.studentmanager.domain.Student" id="StudentInfo">
        <result column="id" property="id"/>
        <result column="sn" property="sn"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="clazz_id" property="clazzId"/>
        <result column="sex" property="sex"/>
        <result column="mobile" property="mobile"/>
        <result column="qq" property="qq"/>
        <result column="photo" property="photo"/>
    </resultMap>

    <select id="queryList" resultMap="StudentInfo" >
        <!-- 根据条件查询 图书的所有信息 -->
        SELECT *
        from s_student
        <where>
            <if test="username!=null"> and username LIKE concat("%",#{username},"%") </if>
            <if test="clazzid!=null"> and clazz_id LIKE concat("%",#{clazzid},"%") </if>
            <if test="studentid!=null"> and id = #{studentid} </if>
        </where>
        limit #{startIndex},#{pagesize}
    </select>

    <select id="queryCount" resultType="int" >
        select count(*) from s_student
        <where>
            <if test="username!=null"> and username LIKE concat("%",#{username},"%") </if>
            <if test="clazzid!=null"> and clazz_id LIKE concat("%",#{clazzid},"%") </if>
            <if test="studentid!=null"> and id = #{studentid} </if>
        </where>
    </select>

    <insert id="addStudent" parameterType="Student" >
        insert into s_student(sn,username,password,clazz_id,sex,mobile,qq,photo)
        values(#{sn},#{username},#{password},#{clazzId},#{sex},#{mobile},#{qq},#{photo})
    </insert>
    <!--动态sql-->
    <!--当where后紧随and或则or的时候，就去除and或者or-->
    <!--<foreach>标签用于遍历集合，它的属性：collection:代表要遍历的集合元素，注意编写时不要写#{}open:代表语句的开始部分close:代表结束部分item:代表遍历集合的每个元素，生成的变量名sperator:代表分隔符-->
    <!--IN 操作符允许我们在 WHERE 子句中规定多个值,如SELECT * FROM student WHERE age IN (22,18,25);-->
    <!--insert、delete、update标签里没有resultType属性，但有返回值，返回值为改变的条数-->
    <delete id="deleteStudent" parameterType="java.util.ArrayList">
        delete from s_student
        <where>
            id in
            <foreach collection="list" open="(" close=")" separator="," item="id">
                #{id}
            </foreach>
        </where>
    </delete>

    <update id="editStudent" parameterType="Student">
        update s_student
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="clazzId != null">
                clazz_id = #{clazzId},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="mobile != null">
                mobile = #{mobile},
            </if>
            <if test="qq != null">
                qq = #{qq},
            </if>
            <if test="photo != null">
                photo = #{photo},
            </if>
        </set>
        where id = #{id}
    </update>


    <select id="findById" parameterType="int" resultType="Student">
        select * from s_student where id = #{sid}
    </select>

    <select id="findByStudent" parameterType="Student" resultType="Student">
        select * from s_student where username = #{username} and password = #{password}
    </select>

    <select id="isStudentByClazzId" parameterType="int" resultMap="StudentInfo">
        select * from s_student where clazz_id = #{id}
    </select>

    <update id="editPswdByStudent" parameterType="Student">
        update  s_student set password = #{password} where id = #{id}
    </update>

    <select id="findByName" parameterType="java.lang.String" resultType="int">
        select id from s_student where username = #{name}
    </select>

</mapper>